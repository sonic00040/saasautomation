# ============================================
# BotAI Environment Variables Template
# ============================================
# Copy this file and configure for your environment
#
# Frontend: Vercel
# Backend: Render
# Database: Supabase
#
# ============================================

# ============================================
# FRONTEND (Vercel) - Add to Vercel Dashboard
# ============================================

# Supabase Configuration
NEXT_PUBLIC_SUPABASE_URL=https://rjvvkfecdrdxmnxwiuto.supabase.co
NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJqdnZrZmVjZHJkeG1ueHdpdXRvIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTY4NTUzNzgsImV4cCI6MjA3MjQzMTM3OH0.ibTmovGAgl_LUztNVvu2mRhdiAeVxIzYLSMWXbc4PCI

# Backend API URL (update after Render deployment)
NEXT_PUBLIC_BACKEND_URL=https://botai-backend.onrender.com

# Environment
NEXT_PUBLIC_ENV=production

# ============================================
# BACKEND (Render) - Add to Render Dashboard
# ============================================

# Google AI API Key
# Get from: https://makersuite.google.com/app/apikey
GOOGLE_API_KEY=AIzaSyBEtgH1LswIm-A1Rfa0I6rQCDVAYOs80YE

# Supabase Configuration
SUPABASE_URL=https://rjvvkfecdrdxmnxwiuto.supabase.co
SUPABASE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJqdnZrZmVjZHJkeG1ueHdpdXRvIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTY4NTUzNzgsImV4cCI6MjA3MjQzMTM3OH0.ibTmovGAgl_LUztNVvu2mRhdiAeVxIzYLSMWXbc4PCI

# Telegram Webhook Secret (generate random string)
# Generate with: openssl rand -hex 32
TELEGRAM_WEBHOOK_SECRET=your_secure_random_string_at_least_32_chars_long

# Application URLs
BACKEND_URL=https://botai-backend.onrender.com
FRONTEND_URL=https://your-frontend.vercel.app

# Application Configuration
ENVIRONMENT=production
LOG_LEVEL=INFO
PORT=8000

# Redis (Optional - for rate limiting)
# Add if you create a Redis service in Render
# REDIS_URL=redis://default:password@host:port

# ============================================
# LOCAL DEVELOPMENT
# ============================================
# For running locally, create a .env file in:
# - /frontend/.env.local (for Next.js)
# - /backend/.env (for FastAPI)

# Frontend (.env.local)
# NEXT_PUBLIC_SUPABASE_URL=https://rjvvkfecdrdxmnxwiuto.supabase.co
# NEXT_PUBLIC_SUPABASE_ANON_KEY=your_anon_key
# NEXT_PUBLIC_BACKEND_URL=http://localhost:8000
# NEXT_PUBLIC_ENV=development

# Backend (.env)
# GOOGLE_API_KEY=your_google_api_key
# SUPABASE_URL=https://rjvvkfecdrdxmnxwiuto.supabase.co
# SUPABASE_KEY=your_supabase_key
# TELEGRAM_WEBHOOK_SECRET=test_secret_for_local
# ENVIRONMENT=development
# LOG_LEVEL=DEBUG
# PORT=8000

# ============================================
# NOTES
# ============================================
#
# 1. Frontend Environment Variables:
#    - Must start with NEXT_PUBLIC_ to be accessible in browser
#    - Add in Vercel Dashboard → Project → Settings → Environment Variables
#    - Enable for all environments (Production, Preview, Development)
#
# 2. Backend Environment Variables:
#    - Add in Render Dashboard → Service → Environment tab
#    - Render auto-redeploys when you save changes
#
# 3. Supabase:
#    - ANON_KEY is safe to expose (it's public, RLS protects data)
#    - Never expose SERVICE_ROLE_KEY (has admin access)
#
# 4. Telegram Webhook Secret:
#    - Used to verify webhook requests are from Telegram
#    - Must be at least 32 characters
#    - Keep it secret (don't commit to git)
#
# 5. Google AI API Key:
#    - Get from: https://makersuite.google.com/app/apikey
#    - Free tier: 60 requests/minute
#    - Keep it secret
#
# 6. Never commit actual .env files to git!
#    - .env files are in .gitignore
#    - Only commit .env.example with placeholders
#
# ============================================
# SECURITY CHECKLIST
# ============================================
#
# ✅ All secrets stored in platform dashboards (Vercel/Render)
# ✅ No secrets committed to GitHub repository
# ✅ Supabase RLS policies enabled on all tables
# ✅ CORS configured to allow only your frontend domain
# ✅ Telegram webhook secret configured
# ✅ HTTPS enforced (automatic on Vercel/Render)
#
# ============================================
